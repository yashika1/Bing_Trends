<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="ClientConfigurationSection" type="Microsoft.Cosmos.Client.ClientConfigurationSection, Microsoft.Cosmos.Client"/>
  </configSections>
  <ClientConfigurationSection>
    <MaxConcurrentRequests Value="10" />
    <DefaultEndpointHost Value="https://cosmos.osdinfra.net"/>
  </ClientConfigurationSection>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttpBinding16MBStreamed" transferMode="StreamedResponse" maxBufferSize="16777216" maxReceivedMessageSize="1073741824" sendTimeout="0:10:0.0">
          <readerQuotas maxArrayLength="16777216" maxStringContentLength="104857600" maxBytesPerRead="1048576" />
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Ntlm" />
          </security>
          <!-- iSCOPEHost service(on ISFE) only needs few seconds to send keep alive message to iSCOPE service-->
          <?ap-config target="@sendTimeout" value="00:00:10" when="@mf='ISFE'" ?>
        </binding>
        <binding name="basicHttpsBinding16MBStreamed" transferMode="StreamedResponse" maxBufferSize="16777216" maxReceivedMessageSize="1073741824"  sendTimeout="0:10:0.0">
          <readerQuotas maxArrayLength="16777216" maxStringContentLength="104857600" maxBytesPerRead="1048576" />
          <security mode="Transport">
            <transport clientCredentialType="Ntlm" />
          </security>
          <!-- iSCOPEHost service(on ISFE) only needs few seconds to send keep alive message to iSCOPE service-->
          <?ap-config target="@sendTimeout" value="00:00:10" when="@mf='ISFE'" ?>
        </binding>
        <binding name="basicHttpBinding16MBStreamedMTOM" transferMode="StreamedResponse" maxBufferSize="16777216" maxReceivedMessageSize="1073741824" messageEncoding="Mtom"  sendTimeout="0:10:0.0">
          <readerQuotas maxArrayLength="16777216"  maxStringContentLength="104857600" maxBytesPerRead="1048576" maxNameTableCharCount="1048576"/>
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Ntlm" />
          </security>
          <!-- iSCOPEHost service(on ISFE) only needs few seconds to send keep alive message to iSCOPE service-->
          <?ap-config target="@sendTimeout" value="00:00:10" when="@mf='ISFE'" ?>
        </binding>
        <binding name="basicHttpsBinding16MBStreamedMTOM" transferMode="StreamedResponse" maxBufferSize="16777216" maxReceivedMessageSize="1073741824" messageEncoding="Mtom"  sendTimeout="0:10:0.0">
          <readerQuotas maxArrayLength="16777216"  maxStringContentLength="104857600" maxBytesPerRead="1048576" maxNameTableCharCount="1048576"/>
          <security mode="Transport">
            <transport clientCredentialType="Ntlm" />
          </security>
          <!-- iSCOPEHost service(on ISFE) only needs few seconds to send keep alive message to iSCOPE service-->
          <?ap-config target="@sendTimeout" value="00:00:10" when="@mf='ISFE'" ?>
        </binding>
        <binding name="basicHttpsBindingCert16MBStreamedMTOM" transferMode="StreamedResponse" maxBufferSize="16777216" maxReceivedMessageSize="1073741824" messageEncoding="Mtom"  sendTimeout="0:10:0.0">
          <readerQuotas maxArrayLength="16777216"  maxStringContentLength="104857600" maxBytesPerRead="1048576" maxNameTableCharCount="1048576"/>
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://cosmos.osdinfra.net/Computation/" behaviorConfiguration="ComputationBehavior"
        binding="basicHttpBinding" bindingConfiguration="basicHttpBinding16MBStreamedMTOM"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IComputationService"
        name="Microsoft.Cosmos.Client.ComputationClient">
        <identity>
          <servicePrincipalName value="http/cosmos.osdinfra.net" />
        </identity>
      </endpoint>
      <!-- Note. Only one Compuatation-related endpoint between the two can be chosen depending on your preference.
      By default, the first endpoint is active.
      Don't forget to uncomment below clientCredentials configuration if the second endpoint is active.
      The first endpoint supports NTLM authentication, while the second endpoint support Certificate authentication.
      -->
      <endpoint address="https://cosmos.osdinfra.net/Computation/" behaviorConfiguration="ComputationBehavior"
        binding="basicHttpBinding" bindingConfiguration="basicHttpsBinding16MBStreamedMTOM"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IComputationService"
        name="Microsoft.Cosmos.Client.ComputationClient.Https">
        <identity>
          <servicePrincipalName value="https/cosmos.osdinfra.net" />
        </identity>
      </endpoint>
      <!--
      <endpoint address="https://cosmos.osdinfra.net/Computation/cert" behaviorConfiguration="ComputationBehavior"
        binding="basicHttpBinding" bindingConfiguration="basicHttpsBindingCert16MBStreamedMTOM"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IComputationService"
        name="Microsoft.Cosmos.Client.ComputationClient.Https">
        <identity>
          <servicePrincipalName value="https/cosmos.osdinfra.net" />
        </identity>
      </endpoint>
      -->
      <endpoint address="http://cosmos.osdinfra.net/Execution/" behaviorConfiguration="ExecutionBehavior"
        binding="basicHttpBinding" bindingConfiguration="basicHttpBinding16MBStreamed"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IExecutionService"
        name="Microsoft.Cosmos.FrontEnd.WebService.Client.ExecutionClient">
        <identity>
          <servicePrincipalName value="http/cosmos.osdinfra.net" />
        </identity>
      </endpoint>
      <endpoint address="http://cosmos.osdinfra.net/Store/" behaviorConfiguration="StoreBehavior"
        binding="basicHttpBinding" bindingConfiguration="basicHttpBinding16MBStreamed"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IStoreService"
        name="Microsoft.Cosmos.FrontEnd.WebService.Client.StoreClient">
        <identity>
          <servicePrincipalName value="http/cosmos.osdinfra.net" />
        </identity>
      </endpoint>
    </client>
    <behaviors>
      <endpointBehaviors>
        <behavior name="StoreBehavior">
          <maxFaultSizeBehavior maxFaultSize="1048576"/>
        </behavior>
        <behavior name="ExecutionBehavior">
          <maxFaultSizeBehavior maxFaultSize="1048576"/>
        </behavior>
        <behavior name="ComputationBehavior">
          <maxFaultSizeBehavior maxFaultSize="16777216"/>
          <!--clientCredentials configuration
          Note: Please correctly configure <clientCredentials> Element. Below configuration sample uses FindByIssuerName as the type of X.509 search to be executed.
		  For more info about <clientCredentials>, please access https://msdn.microsoft.com/en-us/library/ms731323%28v=vs.110%29.aspx	
          certificate issuer name installed on the machine can be listed with the PWS cmd.
		  "Get-ChildItem -path cert:\LocalMachine\My | ForEach-Object {Write-Host $_.Thumbprint -nonewline; Write-Host $_.Issuer -foregroundcolor cyan}" 
          <clientCredentials>
            <clientCertificate findValue="APCA-BN2"
              x509FindType="FindByIssuerName"
              storeLocation="LocalMachine"
              storeName="My" />
          </clientCredentials>
          -->
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add
          name="maxFaultSizeBehavior"
          type="Microsoft.Cosmos.Client.MaxFaultSizeBehavior, Microsoft.Cosmos.Client, Version=1.0.0.2, Culture=neutral, PublicKeyToken=7d7cc824142f8608"
        />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <system.diagnostics>
    <sources>
      <source name="Microsoft.Cosmos.Client" switchName="sourceSwitch">
        <listeners>
          <add name="logfileListener" type="Microsoft.Cosmos.Client.LogTextWriterTraceListener">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Verbose"/>
          </add>
          <add name="console" type="System.Diagnostics.ConsoleTraceListener" traceOutputOptions="ProcessId, Timestamp, ThreadId, DateTime" >
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Off"/>
          </add>
          <remove name="Default" />
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="sourceSwitch" value="Verbose"/>
    </switches>
  </system.diagnostics>
</configuration>
